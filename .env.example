# =============================================================================
# Dominio y SSL
# =============================================================================
DOMAIN=<tu-dominio.com>
SSL_EMAIL=<tu-email@tu-dominio.com>

# =============================================================================
# Autenticación (Traefik Basic Auth en formato htpasswd, p.ej. "admin:$apr1$...")
# Genera con: htpasswd -nb <user> <password>
# =============================================================================
TRAEFIK_AUTH=<user:hash_htpasswd>

# =============================================================================
# Aplicación
# =============================================================================
NODE_ENV=production
SERVER_PORT=3000
SERVER_API_VERSION=v1
# Nota: .env NO evalúa $(git ...). El pipeline puede sobreescribir APP_VERSION.
APP_VERSION=latest

# =============================================================================
# MongoDB
# - MONGO_ROOT_* para el root de Mongo
# - MONGO_USER/MONGO_PASSWORD: usuario aplicativo recomendado
# - MONGODB_URI: URI completa (incluye authSource)
# =============================================================================
MONGO_USER=<default_user>
MONGO_PASSWORD=<password_app_user>
MONGO_ROOT_USERNAME=<default_user>
MONGO_ROOT_PASSWORD=<password_root>

# authSource que usará la conexión (admin o la DB donde creaste el usuario)
authSource=admin

# Servicio de Mongo en docker compose suele llamarse "mongodb"
# Ajusta "imagedb" por el nombre de tu base real
MONGODB_URI=mongodb://<default_user>:<password_default_app_user>@mongodb:27017/imagedb?authSource=admin

# =============================================================================
# Redis
# =============================================================================
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_PASSWORD=<password_redis>
REDIS_DB=0

# =============================================================================
# Cola (BullMQ / Workers)
# =============================================================================
QUEUE_NAME=images:process
QUEUE_CONCURRENCY=5
QUEUE_MAX_RETRIES=5

# =============================================================================
# Storage (rutas dentro del contenedor)
# =============================================================================
STORAGE_INPUT_PATH=/app/storage/images/input
STORAGE_OUTPUT_PATH=/app/storage/images/output

# =============================================================================
# API
# =============================================================================
API_KEY=<api_key_segura>
ENABLE_SWAGGER=false

# =============================================================================
# Logging / Loki
# - LOKI_URL interno vía red docker (servicio "loki")
# =============================================================================
LOG_LEVEL=info
LOKI_URL=http://loki:3100
LOKI_BATCH_SIZE=1024
LOKI_BATCH_INTERVAL=5s

# =============================================================================
# Workers
# =============================================================================
WORKER_REPLICAS=1
